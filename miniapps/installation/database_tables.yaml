---
jobs:
  - journal:
    database:
      host: 127.0.0.1
      port: 5432
      username: username
      password: password
      database: journal
    tables: journals, activities, logs, results, messages, store
  - devices:
    database:
      host: 127.0.0.1
      port: 5432
      username: username
      password: password
      database: operating
    tables: device_backups

journals: >
  CREATE TABLE IF NOT EXISTS public.journals
  (
      uuid uuid NOT NULL DEFAULT gen_random_uuid(),
      opened timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
      closed timestamp with time zone,
      status status DEFAULT 'active'::status,
      PRIMARY KEY (uuid)
  )

activities: >
  CREATE TABLE IF NOT EXISTS public.activities
  (
      id serial,
      uuid uuid NOT NULL DEFAULT gen_random_uuid(),
      journal_uuid uuid NOT NULL,
      app character varying(100),
      activity character varying(200) NOT NULL,
      started timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
      PRIMARY KEY (id),
      CONSTRAINT unique_uuid UNIQUE (uuid),
      CONSTRAINT jrnl_uuid FOREIGN KEY (journal_uuid)
          REFERENCES public.journals (uuid) MATCH SIMPLE
          ON UPDATE NO ACTION
          ON DELETE SET NULL
          NOT VALID
  )

logs: >
  CREATE TABLE IF NOT EXISTS public.logs
  (
      id serial NOT NULL,
      uuid uuid,
      app character varying(100) COLLATE pg_catalog."default",
      date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
      levelno integer,
      levelname character varying(10) COLLATE pg_catalog."default",
      function character varying(1024) COLLATE pg_catalog."default",
      functionname character varying(1024) COLLATE pg_catalog."default",
      module character varying(100) COLLATE pg_catalog."default",
      processname character varying(100) COLLATE pg_catalog."default",
      threadname character varying(100) COLLATE pg_catalog."default",
      lineno integer,
      message character varying(1024) COLLATE pg_catalog."default",
      filename character varying(1024) COLLATE pg_catalog."default",
      pathname character varying(1024) COLLATE pg_catalog."default",
      exception character varying(1024) COLLATE pg_catalog."default",
      extra character varying(1024) COLLATE pg_catalog."default",
      CONSTRAINT log_pkey PRIMARY KEY (id),
      CONSTRAINT activity_uuid FOREIGN KEY (uuid)
          REFERENCES public.activities (uuid) MATCH SIMPLE
          ON UPDATE NO ACTION
          ON DELETE SET NULL
          NOT VALID
  )

results: >
  CREATE TABLE IF NOT EXISTS public.results
  (
      id serial NOT NULL,
      uuid uuid,
      app character varying(100) COLLATE pg_catalog."default",
      entity character varying(80) COLLATE pg_catalog."default",
      message character varying(1024) COLLATE pg_catalog."default",
      CONSTRAINT results_pkey PRIMARY KEY (id),
      CONSTRAINT activity_uuid FOREIGN KEY (uuid)
          REFERENCES public.activities (uuid) MATCH SIMPLE
          ON UPDATE NO ACTION
          ON DELETE SET NULL
          NOT VALID
  )

messages: >
  CREATE TABLE IF NOT EXISTS public.messages
  (
      id serial,
      uuid uuid,
      app character varying(80),
      message text,
      PRIMARY KEY (id),
      CONSTRAINT msg_uuid FOREIGN KEY (uuid)
          REFERENCES public.journals (uuid) MATCH SIMPLE
          ON UPDATE NO ACTION
          ON DELETE SET NULL
          NOT VALID
  )

store: >
  CREATE TABLE IF NOT EXISTS public.store
  (
      app character varying(80) NULL,
      key character varying(1024) NOT NULL,
      value character varying(1024) NOT NULL,
      CONSTRAINT primary_key PRIMARY KEY (key, value, app)
  )

device_backups: >
  CREATE TABLE IF NOT EXISTS public.device_backups
  (
    device character varying(100),
    last_attempt timestamp with time zone NOT NULL,
    last_success timestamp with time zone,
    status boolean NOT NULL,
    retries integer DEFAULT 0,
    message character varying(255),
    PRIMARY KEY (device)
  )

jobs: >
  CREATE TABLE IF NOT EXISTS public.jobs
  (
    id serial,
    job character varying(50) NOT NULL,
    description character varying(100),
    preprocessing character varying(50),
    postprocessing character varying(50),
    arguments json,
    PRIMARY KEY (id)
  )

schedule_plan: >
  CREATE TABLE public.schedule_plan
  (
    id serial,
    job integer NOT NULL,
    schedule character varying(100) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT job_id FOREIGN KEY (job)
        REFERENCES public.jobs (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
        NOT VALID
  )

schedule: >
  CREATE TABLE public.schedule
  (
    id serial,
    job integer NOT NULL,
    last_run timestamp without time zone NOT NULL,
    next_run timestamp without time zone NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT job_id FOREIGN KEY (job)
        REFERENCES public.schedule_plan (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO CASCADE
        NOT VALID
  )
